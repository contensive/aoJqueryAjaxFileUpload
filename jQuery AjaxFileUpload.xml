<?xml version="1.0" encoding="windows-1252"?>
<Collection name="jQuery AjaxFileUpload" guid="{A9669955-6678-4A02-8466-9D5918365420}" system="No" updatable="Yes" blockNavigatorNode="No">
	<HelpLink></HelpLink>
	<Help></Help>
	<Addon name="jQuery ajaxFileUpload" guid="{AC065D4E-7A81-4182-97ED-A936B093EDC7}" type="Add-on">
		<Copy></Copy>
		<CopyText></CopyText>
		<ActiveXProgramID></ActiveXProgramID>
		<DotNetClass></DotNetClass>
		<ArgumentList></ArgumentList>
		<AsAjax>No</AsAjax>
		<Filter>No</Filter>
		<Help></Help>
		<HelpLink></HelpLink>
		<Icon Link="" width="0" height="0" sprites="0" />
		<InIframe>No</InIframe>
		<BlockEditTools>No</BlockEditTools>
		<FormXML></FormXML>
		<IncludeAddon name="JQuery" guid="{9C882078-0DAC-48E3-AD4B-CF2AA230DF80}"/>
		<IsInline>No</IsInline>
		<JavascriptOnLoad></JavascriptOnLoad>
		<JavascriptInHead><![CDATA[
jQuery.extend({
	

    createUploadIframe: function(id, uri)
	{
			//create frame
            var frameId = 'jUploadFrame' + id;
            var iframeHtml = '<iframe id="' + frameId + '" name="' + frameId + '" style="position:absolute; top:-9999px; left:-9999px"';
			if(window.ActiveXObject)
			{
                if(typeof uri== 'boolean'){
					iframeHtml += ' src="' + 'javascript:false' + '"';

                }
                else if(typeof uri== 'string'){
					iframeHtml += ' src="' + uri + '"';

                }	
			}
			iframeHtml += ' />';
			jQuery(iframeHtml).appendTo(document.body);

            return jQuery('#' + frameId).get(0);			
    },
    createUploadForm: function(id, fileElementId, data)
	{
		//create form	
		var formId = 'jUploadForm' + id;
		var fileId = 'jUploadFile' + id;
		var form = jQuery('<form  action="" method="POST" name="' + formId + '" id="' + formId + '" enctype="multipart/form-data"></form>');	
		if(data)
		{
			for(var i in data)
			{
				jQuery('<input type="hidden" name="' + i + '" value="' + data[i] + '" />').appendTo(form);
			}			
		}		
		var oldElement = jQuery('#' + fileElementId);
		var newElement = jQuery(oldElement).clone();
		jQuery(oldElement).attr('id', fileId);
		jQuery(oldElement).before(newElement);
		jQuery(oldElement).appendTo(form);


		
		//set attributes
		jQuery(form).css('position', 'absolute');
		jQuery(form).css('top', '-1200px');
		jQuery(form).css('left', '-1200px');
		jQuery(form).appendTo('body');		
		return form;
    },

    ajaxFileUpload: function(s) {
        // TODO introduce global settings, allowing the client to modify them for all requests, not only timeout		
        s = jQuery.extend({}, jQuery.ajaxSettings, s);
        var id = new Date().getTime()        
		var form = jQuery.createUploadForm(id, s.fileElementId, (typeof(s.data)=='undefined'?false:s.data));
		var io = jQuery.createUploadIframe(id, s.secureuri);
		var frameId = 'jUploadFrame' + id;
		var formId = 'jUploadForm' + id;		
        // Watch for a new set of requests
        if ( s.global && ! jQuery.active++ )
		{
			jQuery.event.trigger( "ajaxStart" );
		}            
        var requestDone = false;
        // Create the request object
        var xml = {}   
        if ( s.global )
            jQuery.event.trigger("ajaxSend", [xml, s]);
        // Wait for a response to come back
        var uploadCallback = function(isTimeout)
		{			
			var io = document.getElementById(frameId);
            try 
			{				
				if(io.contentWindow)
				{
					 xml.responseText = io.contentWindow.document.body?io.contentWindow.document.body.innerHTML:null;
                	 xml.responseXML = io.contentWindow.document.XMLDocument?io.contentWindow.document.XMLDocument:io.contentWindow.document;
					 
				}else if(io.contentDocument)
				{
					 xml.responseText = io.contentDocument.document.body?io.contentDocument.document.body.innerHTML:null;
                	xml.responseXML = io.contentDocument.document.XMLDocument?io.contentDocument.document.XMLDocument:io.contentDocument.document;
				}						
            }catch(e)
			{
				jQuery.handleError(s, xml, null, e);
			}
            if ( xml || isTimeout == "timeout") 
			{				
                requestDone = true;
                var status;
                try {
                    status = isTimeout != "timeout" ? "success" : "error";
                    // Make sure that the request was successful or notmodified
                    if ( status != "error" )
					{
                        // process the data (runs the xml through httpData regardless of callback)
                        var data = jQuery.uploadHttpData( xml, s.dataType );    
                        // If a local callback was specified, fire it and pass it the data
                        if ( s.success )
                            s.success( data, status );
    
                        // Fire the global callback
                        if( s.global )
                            jQuery.event.trigger( "ajaxSuccess", [xml, s] );
                    } else
                        jQuery.handleError(s, xml, status);
                } catch(e) 
				{
                    status = "error";
                    jQuery.handleError(s, xml, status, e);
                }

                // The request was completed
                if( s.global )
                    jQuery.event.trigger( "ajaxComplete", [xml, s] );

                // Handle the global AJAX counter
                if ( s.global && ! --jQuery.active )
                    jQuery.event.trigger( "ajaxStop" );

                // Process result
                if ( s.complete )
                    s.complete(xml, status);

                jQuery(io).unbind()

                setTimeout(function()
									{	try 
										{
											jQuery(io).remove();
											jQuery(form).remove();	
											
										} catch(e) 
										{
											jQuery.handleError(s, xml, null, e);
										}									

									}, 100)

                xml = null

            }
        }
        // Timeout checker
        if ( s.timeout > 0 ) 
		{
            setTimeout(function(){
                // Check to see if the request is still happening
                if( !requestDone ) uploadCallback( "timeout" );
            }, s.timeout);
        }
        try 
		{

			var form = jQuery('#' + formId);
			jQuery(form).attr('action', s.url);
			jQuery(form).attr('method', 'POST');
			jQuery(form).attr('target', frameId);
            if(form.encoding)
			{
				jQuery(form).attr('encoding', 'multipart/form-data');      			
            }
            else
			{	
				jQuery(form).attr('enctype', 'multipart/form-data');			
            }			
            jQuery(form).submit();

        } catch(e) 
		{			
            jQuery.handleError(s, xml, null, e);
        }
		
		jQuery('#' + frameId).load(uploadCallback	);
        return {abort: function () {}};	

    },

    uploadHttpData: function( r, type ) {
        var data = !type;
        data = type == "xml" || data ? r.responseXML : r.responseText;
        // If the type is "script", eval it in global context
        if ( type == "script" )
            jQuery.globalEval( data );
        // Get the JavaScript object, if JSON is used.
        if ( type == "json" )
            eval( "data = " + data );
        // evaluate scripts within html
        if ( type == "html" )
            jQuery("<div>").html(data).evalScripts();

        return data;
    }
})
]]></JavascriptInHead>
		<JavascriptBodyEnd></JavascriptBodyEnd>
		<MetaDescription></MetaDescription>
		<OtherHeadTags></OtherHeadTags>
		<Content>No</Content>
		<Template>No</Template>
		<Email>No</Email>
		<Admin>No</Admin>
		<OnPageEndEvent>No</OnPageEndEvent>
		<OnPageStartEvent>No</OnPageStartEvent>
		<OnBodyStart>No</OnBodyStart>
		<OnBodyEnd>No</OnBodyEnd>
		<RemoteMethod>No</RemoteMethod>
		<ProcessRunOnce>No</ProcessRunOnce>
		<ProcessInterval>0</ProcessInterval>
		<PageTitle></PageTitle>
		<RemoteAssetLink></RemoteAssetLink>
		<Styles></Styles>
		<Scripting Language="" EntryPoint="" Timeout="5000"/>
	</Addon>
	<Addon name="jQueryAjaxFileUpload test form" guid="{EA51A31A-5315-40EF-B272-62A8199862B7}" type="Add-on">
		<Copy></Copy>
		<CopyText><![CDATA[<p>This input element will be saved to your user image when you hit upload</p>
<input type=file name="fileToUploadName" id="fileToUploadId">
<div id="loading" style="display:none;">wait... loading</div>
<div><a href="#" onclick="ajaxFileUploadSample(); return false">Upload Now</a></div>]]></CopyText>
		<ActiveXProgramID></ActiveXProgramID>
		<DotNetClass></DotNetClass>
		<ArgumentList></ArgumentList>
		<AsAjax>No</AsAjax>
		<Filter>No</Filter>
		<Help></Help>
		<HelpLink></HelpLink>
		<Icon Link="" width="0" height="0" sprites="0" />
		<InIframe>No</InIframe>
		<BlockEditTools>No</BlockEditTools>
		<FormXML></FormXML>
		<IncludeAddon name="jQuery ajaxFileUpload" guid="{AC065D4E-7A81-4182-97ED-A936B093EDC7}"/>
		<IsInline>No</IsInline>
		<JavascriptOnLoad></JavascriptOnLoad>
		<JavascriptInHead><![CDATA[	function ajaxFileUploadSample()
	{
		$("#loading")
		.ajaxStart(function(){
			$(this).show();
		})
		.ajaxComplete(function(){
			$(this).hide();
		});

		$.ajaxFileUpload
		(
			{
				url:'/jQueryAjaxFileUploadTestFormHandler',
				/* url:'/index.php?remoteMethodAddon=jQueryAjaxFileUploadTestFormHandler', */
				secureuri:false,
				fileElementId:'fileToUploadId',
				dataType: 'json',
				data:{name:'logan', id:'id'},
				success: function (data, status)
				{
					if(typeof(data.error) != 'undefined')
					{
						if(data.error != '')
						{
							alert(data.error);
						}else
						{
							alert(data.msg);
						}
					}
				},
				error: function (data, status, e)
				{
					alert(e);
				}
			}
		)
		
		return false;

	}
]]></JavascriptInHead>
		<JavascriptBodyEnd></JavascriptBodyEnd>
		<MetaDescription></MetaDescription>
		<OtherHeadTags></OtherHeadTags>
		<Content>No</Content>
		<Template>Yes</Template>
		<Email>No</Email>
		<Admin>No</Admin>
		<OnPageEndEvent>No</OnPageEndEvent>
		<OnPageStartEvent>No</OnPageStartEvent>
		<OnBodyStart>No</OnBodyStart>
		<OnBodyEnd>No</OnBodyEnd>
		<RemoteMethod>No</RemoteMethod>
		<ProcessRunOnce>No</ProcessRunOnce>
		<ProcessInterval>0</ProcessInterval>
		<PageTitle></PageTitle>
		<RemoteAssetLink></RemoteAssetLink>
		<Styles></Styles>
		<Scripting Language="" EntryPoint="" Timeout="5000"/>
	</Addon>
	<Addon name="jQueryAjaxFileUploadTestFormHandler" guid="{2BA1C195-CCD8-48F2-9BFE-F73EEC91A67F}" type="Add-on">
		<Copy></Copy>
		<CopyText></CopyText>
		<ActiveXProgramID></ActiveXProgramID>
		<DotNetClass></DotNetClass>
		<ArgumentList></ArgumentList>
		<AsAjax>No</AsAjax>
		<Filter>No</Filter>
		<Help></Help>
		<HelpLink></HelpLink>
		<Icon Link="" width="0" height="0" sprites="0" />
		<InIframe>No</InIframe>
		<BlockEditTools>No</BlockEditTools>
		<FormXML></FormXML>
		<IsInline>No</IsInline>
		<JavascriptOnLoad></JavascriptOnLoad>
		<JavascriptInHead></JavascriptInHead>
		<JavascriptBodyEnd></JavascriptBodyEnd>
		<MetaDescription></MetaDescription>
		<OtherHeadTags></OtherHeadTags>
		<Content>No</Content>
		<Template>No</Template>
		<Email>No</Email>
		<Admin>No</Admin>
		<OnPageEndEvent>No</OnPageEndEvent>
		<OnPageStartEvent>No</OnPageStartEvent>
		<OnBodyStart>No</OnBodyStart>
		<OnBodyEnd>No</OnBodyEnd>
		<RemoteMethod>Yes</RemoteMethod>
		<ProcessRunOnce>No</ProcessRunOnce>
		<ProcessInterval>0</ProcessInterval>
		<PageTitle></PageTitle>
		<RemoteAssetLink></RemoteAssetLink>
		<Styles></Styles>
		<Scripting Language="" EntryPoint="" Timeout="5000">
			<Code><![CDATA[function m
dim cs,error,filename,msg
error=""
msg=""
filename=cp.request.getText("fileToUploadName")
if filename="" then
    error="no file uploaded"
else
  set cs = cp.csNew()
  if cs.open( "people", "id=" & cp.user.id ) then
    call cs.setFormInput("imageFilename","fileToUploadName")
    msg = "file:" & filename
  else
    error="user not found"
  end if
  call cs.close()
end if
m="{error:'" & error& "',msg:'" & msg & "'}"
end function]]></Code>
		</Scripting>
	</Addon>
	<ImportCollection name="JQuery">{A435BF70-041B-43D1-8A8D-5D9D59A7FCD0}</ImportCollection>
</Collection>